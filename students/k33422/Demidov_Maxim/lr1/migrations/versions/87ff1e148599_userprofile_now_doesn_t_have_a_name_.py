"""userProfile now doesn't have a name field

Revision ID: 87ff1e148599
Revises: 95feb4e1d716
Create Date: 2024-04-08 18:48:59.666734

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '87ff1e148599'
down_revision: Union[str, None] = '95feb4e1d716'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task')
    op.drop_table('project')
    op.drop_table('userteam')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    op.drop_table('userprofile')
    op.drop_table('team')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('profile_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['userprofile.id'], name='user_profile_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=False)
    op.create_table('userteam',
    sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('position', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], name='userteam_team_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='userteam_user_id_fkey'),
    sa.PrimaryKeyConstraint('team_id', 'user_id', name='userteam_pkey')
    )
    op.create_table('task',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deadline', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name='task_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='task_pkey')
    )
    op.create_table('userprofile',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('avatar', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='userprofile_pkey')
    )
    op.create_table('team',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('team_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='team_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('expected_result', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], name='project_team_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_pkey')
    )
    # ### end Alembic commands ###
