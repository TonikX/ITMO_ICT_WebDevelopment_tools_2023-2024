import asyncio
import time


async def calculate_sum(start: int, end: int) -> int:
    """
    Вычислить сумму целых чисел в диапазоне [начало, конец).

    Параметры:
    start (int): Начало диапазона (включительно).
    end (int): Конец диапазона (исключая).

    Возвращает:
    int: Сумма целых чисел в указанном диапазоне.
    """
    return sum(range(start, end))


async def main():
    """
    Основная асинхронная функция для вычисления суммы чисел параллельно.

    Создает задачи для вычисления сумм в диапазонах и выполняет их параллельно,
    затем собирает результаты и выводит общую сумму.
    """
    tasks = []  # Список задач
    start = 1  # Начало общего диапазона
    end = 1000000  # Конец общего диапазона
    step = 100000  # Шаг для разделения диапазона на поддиапазоны

    for i in range(start, end, step):
        # Создаем задачи для вычисления суммы в поддиапазонах
        tasks.append(asyncio.create_task(calculate_sum(i, i + step)))

    # Выполняем все задачи параллельно и ждем их завершения
    results = await asyncio.gather(*tasks)
    print("Результат Asyncio:", sum(results))  # Выводим общую сумму


if __name__ == "__main__":
    start_time = time.time()  # Время начала выполнения
    asyncio.run(main())  # Запускаем основную асинхронную функцию
    print("Время выполнения:", time.time() - start_time)  # Время выполнения программы
